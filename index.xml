<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AntHead</title><link>https://alinco2020.github.io/AntHead/</link><description>Recent content on AntHead</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Tue, 10 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://alinco2020.github.io/AntHead/index.xml" rel="self" type="application/rss+xml"/><item><title>📝CDN(Content Delivery Network)</title><link>https://alinco2020.github.io/AntHead/posts/202301101506/</link><pubDate>Tue, 10 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301101506/</guid><description>CDNとは 物理的にバラバラの位置に配置したサーバーのこと。ユーザーの所在地に近いところから配信できるから高速。
refs:
📝CDNとは何か？| CDNの仕組みは？ Backlinks
⌨️Webプログラミング</description></item><item><title>📝DASH(Dynamic Adaptive Streaming over HTTP)</title><link>https://alinco2020.github.io/AntHead/posts/202301101453/</link><pubDate>Tue, 10 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301101453/</guid><description>DASHとは 動画ストリーミングプロトコル。正式名称はMPEG-DASH。ISO国際標準規格。📝HLSと似てる。
仕組み 動画ファイルを2～4秒のセグメント(.mp4)に分割してインデックスファイル(.mpd)を作成 任意のコーデック(なんでもOK)でエンコード クライアントのデバイスにセグメントを送る。📝CDNが役立つ ユーザー側でデコードして再生 HTTPで実行され、トランスポートプロトコルとしてTCPを使用。
MPDマニフェスト インデックスファイルのこと。形式はXML。
refs:
📝MPEG-DASHとは？| HLSとDASH 📝[MPEG-DASH] MPDのファイル構造 Backlinks
⌨️Webプログラミング 📝動画配信技術 📝HLS(HTTPライブストリーム)</description></item><item><title>📝DRM(Digital Rights Management)</title><link>https://alinco2020.github.io/AntHead/posts/202301101337/</link><pubDate>Tue, 10 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301101337/</guid><description>DRMとは 暗号化してコンテンツを保護する仕組みの総称。
仕組み ライセンスサーバーから発行された鍵で動画ファイルを暗号化 ユーザーがライセンスサーバーに認証をリクエスト 認証が通ると鍵情報を含むライセンス情報がユーザーに返ってきて動画を再生できる 📝動画配信におけるコンテンツ保護の重要性とそれを実現する仕組みを自分なりにまとめてみた
Backlinks
📝動画配信技術 ⌨️Webプログラミング</description></item><item><title>📝動画配信技術</title><link>https://alinco2020.github.io/AntHead/posts/202301101432/</link><pubDate>Tue, 10 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301101432/</guid><description>動画配信技術についてまとめる。暗号化など。
ABR(Adaptive bit Rate)とは ストリーミングを安定させる技術のこと。ネットワークの状態によって動画品質を変化させる。
ABR対応ストリーミングプロトコル 📝HLS(HTTPライブストリーム) 📝DASH(Dynamic Adaptive Streaming over HTTP) HDS(HTTP動的ストリーミング) refs:
📝アダプティブビットレートストリーミングとは？ 📝web上での動画配信をダウンロードさせないために最近は Backlinks
⌨️Webプログラミング</description></item><item><title>⌨️Extendscriptでリストのsumとmaxを求める</title><link>https://alinco2020.github.io/AntHead/posts/202301092218/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301092218/</guid><description>up: ⌨️Script reduceは使えないから愚直にfor文回せ。以上。</description></item><item><title>⌨️Webプログラミング</title><link>https://alinco2020.github.io/AntHead/posts/202301091331/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301091331/</guid><description>Web系の投稿はここから辿れるようにする。
⌨️サイト制作 📝動画配信技術 📝HLS(HTTPライブストリーム) 📝DASH(Dynamic Adaptive Streaming over HTTP) 📝DRM(Digital Rights Management) 📝CDN(Content Delivery Network) Backlinks
🐜What is AntHead?</description></item><item><title>📝HLS(HTTPライブストリーム)</title><link>https://alinco2020.github.io/AntHead/posts/202301091321/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301091321/</guid><description>HLSとは 動画ストリーミングプロトコル。Appleが開発。
メリットは2つ
・実装が簡単(HTTPプロトコルなので全てのサーバーで実装可能)
・画質を上げ下げ可能
仕組み ・H.264かH.265で再エンコ
・数秒のセグメント(.ts)に分割
・インデックスファイル(.m3u8)を作ってセグメントの順番を記録
・画質ごとにセグメントを作成（480p 720p 1080pなど）
ネットワークの速度に合わせて動画品質を調整できる（アダプティブビットレートストリーミング）
UDPプロトコルのほうが速いけどHLSはTCPプロトコルを使う
refs:
📝HTTPライブストリーミングとは？| HLSストリーミング Backlinks
⌨️Webプログラミング 📝動画配信技術 📝DASH(Dynamic Adaptive Streaming over HTTP)</description></item><item><title>🎬できない映像表現</title><link>https://alinco2020.github.io/AntHead/posts/202301080858/</link><pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301080858/</guid><description>出来ないことをわかるようにして1つずつ潰していく。なるべく詳細に。
モーショングラフィックス グラデーションのかかったシェイプ 視線誘導（一つの円を目で追わせる、みたいな） 長く連続させるカット シームレストランジション デザイン 3DCG 人物モデリング モーション クロスシミュレーション セルルック 漫画キャラモーション 手描き アニメーション Backlinks
🐜What is AntHead?</description></item><item><title>🎬デザイン研究</title><link>https://alinco2020.github.io/AntHead/posts/202301080911/</link><pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301080911/</guid><description>デザインに関する投稿はここにまとめる。
デザインの構成要素 Line（線）
2つ以上の繋がった点のことで、太さ、長さ、方向を持っている。区切り、強調、つながりなど、何かと使える基本要素。「とりあえず線でも入れて区切っとけ」というのは本質的ではない。 Color（色）
色相、彩度、明度を合わせて色の三属性と呼ぶ。色を計画的に使うことによって、印象をコントロールできる。 Shape（形状）
線や塗りで形成された領域。三角形、四角形、円などの幾何学図形と、不整形の有機的図形がある。 Texture（質感）
材質がもつ、視覚的・触覚的な質感。触ることができるTactile texture（触覚的テクスチャー）と、2次元のVisual texture（視覚的テクスチャー）がある。動きで伝わる質感も存在する。（落下と同時にシェイプがつぶれるエフェクトからは柔らかさを感じる、など） Space（空間）
Space（空間）には、2D Space（二次元空間）と3D Space（三次元空間）が存在する。シェイプなどの認識される部分をポジティブスペース、それ以外の領域をネガティブスペースという。 一般的に、スペース（空き）というと、ネガティブスペースのことを指すことが多い。 Form（外形、三次元の形）
「幅」「奥行き」「高さ」を持っている三次元のオブジェクト。人工のGeometric form（幾何学的フォーム）と自然界で見られるOrganic Form（有機的フォーム）がある。 Typography（タイポグラフィー）
活版印刷により発達した文字の体裁を整える技術。効果的に使う事で可読性を高めたり、デザイン性を増したりできる。 📝感覚派デザイナーも知っておいて損はない「デザインの要素と原則」
線、色、シェイプは当然のように使うけど他はあまり意識したことないかも。
ざっと分類 モーショングラフィックス グラフィックデザイン Webデザイン タイポグラフィー ポスターデザイン スポーツグラフィックデザイン コラージュ UI UXデザイン refs:
📝感覚派デザイナーも知っておいて損はない「デザインの要素と原則」 📝初心者でも分かりやすい、グラフィックデザインの理論と原則 Backlinks
🐜What is AntHead?</description></item><item><title>⌨️Script</title><link>https://alinco2020.github.io/AntHead/posts/202301071000/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301071000/</guid><description>スクリプトに関する知見はここから全て辿れるようにする。
よく使うサイト 📝公式ドキュメント
📝UIビルダー
📝コマンドID一覧
自作関数 ⌨️位置にSetValueする関数 ⌨️特定のプロパティを返す関数 メモ ⌨️Extendscriptでリストのsumとmaxを求める 自作スクリプト配布場所 🐜ALINCOLONY
Backlinks
🐜What is AntHead?</description></item><item><title>⌨️位置にSetValueする関数</title><link>https://alinco2020.github.io/AntHead/posts/202301071101/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301071101/</guid><description>up: ⌨️Script 位置にSetValueするのはなかなか面倒くさい。次元分解で条件分岐が必要だったり。なので関数を作った。
/** * ポジションを設定する関数 * @param {*} layer レイヤー * @param {*} XYarray 配列[x, y, z] * @param {boolean} isSetValueAtTime setValueAtTimeを使うかどうか * @param {*} time setValueAtTimeを使う場合の時間 */ function setPosition(layer, XYZarray, isSetValueAtTime, time) { try { var x = XYZarray[0] var y = XYZarray[1] var z = XYZarray[2] var position = layer.property(&amp;#39;ADBE Transform Group&amp;#39;).property(&amp;#39;ADBE Position&amp;#39;) // setValueを使う場合 if (!isSetValueAtTime) { // 次元分割されていない場合 if (!position.dimensionsSeparated) { position.</description></item><item><title>⌨️特定のプロパティを返す関数</title><link>https://alinco2020.github.io/AntHead/posts/202301071301/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301071301/</guid><description> up: ⌨️Script matchNameが一致するプロパティを再帰で全部返す。何かと便利。
/** * 特定のプロパティを返す * @param {*} rootObj レイヤーでもコンテンツでもOK * @param {*} nestingLevel 0でOK * @param {*} matchName 探したいプロパティのmatchName * @returns */ function returnProp(rootObj, nestingLevel, matchName) { var propTo = []; dumpPropTree(rootObj, nestingLevel, matchName); function dumpPropTree(rootObj, nestingLevel, matchName) { var countProps = rootObj.numProperties; for (var propIndex = 1; propIndex &amp;lt;= countProps; propIndex++) { var prop = rootObj.property(propIndex); if (prop.matchName == matchName) { propTo.push(prop) return; } else { dumpPropTree(prop, nestingLevel + 1, matchName); } } } return propTo; }</description></item><item><title>🎬2023年01月よかった映像</title><link>https://alinco2020.github.io/AntHead/posts/202301071651/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301071651/</guid><description>up: 🎬よかった映像まとめ 💗2022 sakuga 備忘録
複合MAD的なシーン選びが良い
💙2022 works by @chiu_hans (2btwq8RCjIMpS9t2)
冒頭のVScodeの画面が浮いてるところ好き。透明感ある3DCGにUIが乗るとMicrosoftのPVを連想する。
💙Forgotten &amp;#43;UI by @tet144 (qedm-6GHKGd2bt6p)
UIの細かさが良い
💙I created a site where you can~ by @slimesunday (4QXS2FITCc0Yjo-3)
面白い
💙新年いいね by @Y_gzm17_W (g6fl8MNHLJ0t2ylf)
イーズがいい
💙海に落ちたピアノ by @mae_1031_ (FleOEJJaMAARScf)
ドット絵すき。海とピアノと月光の取り合わせが素敵。
💙voltaさんのAVE.3という楽曲を~ by @noixy_y (x6eNvNSJbvaAcQla)
0:18辺りの背景のくすんだ虹色すき
💙beanlette daybook☼ by @majorbean_ (Iv45WoxC37tg3pty)
UIがぶち壊れるの反射的にいいね押してしまう
💙coastal breeze ୭ ₒᵒ ᴏ ｡॰ₒ~ by @majorbean_ (EQJdTVamqwF8T_Kv)
横に光がギュイーンってなるの良すぎ
💙REEL 2022 by @Lazy_Mori (D3mOB4UN6anjcXA-)
0:07辺りのワイヤーフレームと下絵のカットでいいね押した気がする。たぶん。
💗Moodmaker
道路が回転して斜めの赤になるところが良い</description></item><item><title>🎬よかった映像まとめ</title><link>https://alinco2020.github.io/AntHead/posts/202301071605/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301071605/</guid><description>MAD研究フォルダー行きになった動画を一言コメントをつけてリストアップ。基本YouTubeとTwitter。
2023 01 Backlinks
🐜What is AntHead?</description></item><item><title>🐜好きな歌詞 フレーズ</title><link>https://alinco2020.github.io/AntHead/posts/202301072320/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301072320/</guid><description>動画にポエミーなタイトルを付けたいときに役立つかもしれない。上に新しく追加していく。
今この僕があの日の答えだ
未来になれなかったあの夜に / amazarashi
僕らが世界を汚す
ムスタング / ASIAN KUNG-FU GENERATION 萌ゆる草木のように逞しく生きて 傷ついたら泣きなさい
マヨイガ / 羊文学
ニーチェだって万物を理解したんじゃない
虹を目指して / Half time Old
ありとあらゆるネガティヴよ 今ここでメロディになれ!
宇宙旅行にロケットは要らない
ヤバすぎるスピード / ハンブレッダーズ いつか終わりが来てしまえば それぞれの道を歩んでいくから
シンデレラ / サイダーガール
貴方がもし名誉ある孤独に耐えかねて嫌になって
恋人や友達と手を繋ぐことがあったとして
スーパースター / 時速36km
最後は憎み合うぼくらも同じ朝焼けを見ただろう
どれほど愛し合っていても違う夕焼けを見るだろう
stars / 時速36km</description></item><item><title>⌨️サイト制作</title><link>https://alinco2020.github.io/AntHead/posts/202301062241/</link><pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301062241/</guid><description>Hogoを使用してmarkdownで記事を書き、github pagesで公開する。
Hugoとは markdownから静的サイトを作れるやつ。テーマも用意されてる。
📝Hugo と Github Pages でブログを作る
バイナリーでインストールしたが、armとamdを間違えた。両者の違いを理解してなかった。amdが正解。
📝CPUアーキテクチャの種類(x86, x64, arm)
Markdownの書き方 そのうち慣れると思うけど一応メモ.
📝Markdown記法 チートシート
VSNotesで記事を書いてgithub pagesでサイト化 markdownでメモ帳を書けるVScodeの拡張機能。Hugo用に設定すればそのまま便利に使えそう。
📝VSCode(Visual Studio Code)をメモ帳として使える拡張機能「VSNotes」が便利そう
スニペットの編集。
📝VS Codeでメモを取る(VSNotes)
📝VSCode &amp;#43; VSNote &amp;#43; Hugoでより快適にmarkdownを書くためのテンプレート設定
画像サーバー プログラムだけでなく映像のことも書いていくとなると画像用の別のサーバーが必要になってくる。
📝ブログの画像配信サーバーとして Cloudflare R2 を使う
📝Cloudflare R2の画像をCache APIでキャッシュして返すメモ
テーマ自作 無料で公開されてるHolyを改造していく。WordPressのテーマのカスタマイズと似てる。
検索欄とか目次とかあるだけでいい。極力シンプルに。
📝Hugo のテーマを自作した
カスタムCSSが上手くいかない。 上手く行った。
TODO　カスタムcssまとめ 📝Hugo でカスタム CSS を適用して画像の配置をイジる
CSSはこのサイトからざっくりコピペ。自作の流れもこれを主に参考にindex.html消したりlist.htmlいじったりした。
📝Hugo のテーマを自作した
リストが記事のdateをもとにソートされ、同じ日の記事は名前でソートされてしまっていたので、ファイル名でソートするようにlist.htmlを書き換えた。ファイル名はHHMMまで書いてるからこれで書き始めた順番通りに並ぶ。
ファイルパスでソートする方法
📝Explicitly order pages by file path - tips &amp;amp;amp; tricks - HUGO</description></item><item><title>🐜What is AntHead?</title><link>https://alinco2020.github.io/AntHead/posts/202301061720/</link><pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate><guid>https://alinco2020.github.io/AntHead/posts/202301061720/</guid><description>一匹のアリによる知識データベースシステム アリの第二の脳を目指す。つまり外部記憶装置。知識の整理と格納、知見化が目的。
これを参考に
📝Wiki and Zettelkastenによる実験的な知的生産基盤.
このサイトのいい所
・各投稿が短い
・リンクで各投稿が結びついてる（脳のシナプスのよう）
・引用で知識は完全に他者に任せてる
・頭の絵文字で分類してる
・サイトの構造がいい
このサイトで扱いたいテーマ 🎬映像 技術Tips デザイン研究 テーマの深掘り 他の人の作品研究 よかった映像まとめ できない映像表現 ⌨️プログラミング AEスクリプト Webプログラミング ネットワーク 💹投資 株 為替 仮想通貨 最初はひたすら書いて、記事数が増えてきてからタイトルとかタグ付けとか整理していくスタイルでいいと思う。一つの目的を達成するために調べた他の知識もメモにしていけば知見になる。自分のためだけのサイトでいい。
絵文字の使い分け 🐜 個人的な内容
🎬 映像関連
⌨️ プログラム関連
💹 投資関連
📝 外部リンク, 他者の知識</description></item></channel></rss>